{load_file("stdgui.hoc")}

begintemplate Rall

public init, makeDend, makeEqCylinder
public Dend, SectionNum, maxlevel, rootdiam, rootL, direction

external lambda_f

create Dend[1]

proc init() {
	maxlevel = $1
	rootdiam = $2
	rootL = $3
	direction = $4 // 1 or -1

	SectionNum = int(2^(maxlevel+1) - 1)
}

proc makeDend() {
	create Dend[SectionNum]
	
    Dend[0] { 
		pt3dclear() 
		pt3dadd(0, 0, 0, rootdiam)
		pt3dadd(direction*rootL, 0, 0, rootdiam) 
		nseg = int((L / (0.1 * lambda_f(100.0)+0.0001) + .9) / 2) * 2 + 1
	}
	
	makeChild(0, 1)
}

proc makeChild() { local pNum, level, px, py, pz, pd, pL, cd, cL, c1, c2
	pNum = $1
	level = $2

	if( level > maxlevel ) { return }
	Dend[pNum] {
		px = x3d(1)
		py = y3d(1)
		pz = z3d(1)
		pd = diam3d(1)
		pL = arc3d(n3d()-1)
	}
	cd = pd// * 2^(-2/3)
	cL = pL * 2^(-1/3)
	c1 = 2 * pNum + 1
	c2 = 2 * pNum + 2
	
	Dend[c1] { 
		pt3dclear()
		pt3dadd(px, py, pz, cd) 
		pt3dadd(direction*(cL/sqrt(2))+px, (cL/sqrt(2))+py, 0+pz, cd) 
		nseg = int((L / (0.1 * lambda_f(100.0)+0.0001) + .9) / 2) * 2 + 1
	}
	Dend[c2] { 
		pt3dclear() 
		pt3dadd(0+px, 0+py, 0+pz, cd) 
		pt3dadd(direction*(cL/sqrt(2))+px, -(cL/sqrt(2))+py, 0+pz, cd) 
		nseg = int((L / (0.1 * lambda_f(100.0)+0.0001) + .9) / 2) * 2 + 1
	}

	connect Dend[c1](0), Dend[pNum](1)
	connect Dend[c2](0), Dend[pNum](1)
	
	makeChild(c1, level+1)
	makeChild(c2, level+1)
}

proc makeEqCylinder() { local i
	create Dend[maxlevel+1]
	for i = 0, maxlevel {
		Dend[i] {
			pt3dclear() 
			pt3dadd(direction*rootL*i,     0, 0, rootdiam) 
			pt3dadd(direction*rootL*(i+1), 0, 0, rootdiam) 
			nseg = int((L / (0.1 * lambda_f(100.0)+0.0001) + .9) / 2) * 2 + 1
		}
		if( i > 0 ) {
			connect Dend[i](0), Dend[i-1](1)
		}
	}
	SectionNum = maxlevel+1
}

endtemplate Rall